{"ast":null,"code":"import axios from 'axios';\n// import dotenv from 'dotenv';\n// const dotenv = require('dotenv');\n// dotenv.config();\n\n// require('dotenv').config();\n// const apiUrl = process.env.REACT_APP_API_URL;\n\n//  const apiUrl =\"http://localhost:5116\";\n\n// const apiUrl = process.env.REACT_APP_DEFAULT_API_URL;\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  console.error('Request failed:', error.message);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/todos`);\n    return result.data;\n  },\n  addTask: async name => {\n    await axios.post(`${apiUrl}/todo`, {\n      name: name,\n      isComplete: false\n    });\n    console.log('addTask', name);\n    //TODO\n    // return {};\n  },\n  setCompleted: async (id, isComplete) => {\n    var i = await axios.get(`${apiUrl}/todo/${id}`);\n    await axios.put(`${apiUrl}/todos/${id}`, {\n      name: i.data.name,\n      isComplete: isComplete\n    });\n\n    // console.log('setCompleted', {id, isComplete})\n    // //TODO\n    // return {};\n  },\n  deleteTask: async id => {\n    // console.log('deleteTask')\n    await axios.delete(`${apiUrl}/todo/${id}`);\n  }\n};","map":{"version":3,"names":["axios","interceptors","response","use","error","console","message","Promise","reject","getTasks","result","get","apiUrl","data","addTask","name","post","isComplete","log","setCompleted","id","i","put","deleteTask","delete"],"sources":["C:/Users/user1/Downloads/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n// import dotenv from 'dotenv';\n// const dotenv = require('dotenv');\n// dotenv.config();\n\n// require('dotenv').config();\n// const apiUrl = process.env.REACT_APP_API_URL;\n\n//  const apiUrl =\"http://localhost:5116\";\n\n// const apiUrl = process.env.REACT_APP_DEFAULT_API_URL;\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    console.error('Request failed:', error.message);\n    return Promise.reject(error);\n    \n  }\n);\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/todos`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    await axios.post(`${apiUrl}/todo`, { name: name, isComplete: false });\n    console.log('addTask', name)\n    //TODO\n    // return {};\n  },\n\n  setCompleted: async(id, isComplete)=>{\n    var i = await axios.get(`${apiUrl}/todo/${id}`);\n    await axios.put(`${apiUrl}/todos/${id}`, { name: i.data.name, isComplete: isComplete });\n\n    // console.log('setCompleted', {id, isComplete})\n    // //TODO\n    // return {};\n  },\n\n  deleteTask:async(id)=>{\n    // console.log('deleteTask')\n    await axios.delete(`${apiUrl}/todo/${id}`);\n\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACAA,KAAK,CAACC,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7B,UAAUD,QAAQ,EAAE;EAClB,OAAOA,QAAQ;AACjB,CAAC,EACD,UAAUE,KAAK,EAAE;EACfC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC/C,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAE9B,CACF,CAAC;AACD,eAAe;EACbK,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,GAAEC,MAAO,QAAO,CAAC;IACjD,OAAOF,MAAM,CAACG,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpB,MAAMf,KAAK,CAACgB,IAAI,CAAE,GAAEJ,MAAO,OAAM,EAAE;MAAEG,IAAI,EAAEA,IAAI;MAAEE,UAAU,EAAE;IAAM,CAAC,CAAC;IACrEZ,OAAO,CAACa,GAAG,CAAC,SAAS,EAAEH,IAAI,CAAC;IAC5B;IACA;EACF,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEH,UAAU,KAAG;IACnC,IAAII,CAAC,GAAG,MAAMrB,KAAK,CAACW,GAAG,CAAE,GAAEC,MAAO,SAAQQ,EAAG,EAAC,CAAC;IAC/C,MAAMpB,KAAK,CAACsB,GAAG,CAAE,GAAEV,MAAO,UAASQ,EAAG,EAAC,EAAE;MAAEL,IAAI,EAAEM,CAAC,CAACR,IAAI,CAACE,IAAI;MAAEE,UAAU,EAAEA;IAAW,CAAC,CAAC;;IAEvF;IACA;IACA;EACF,CAAC;EAEDM,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpB;IACA,MAAMpB,KAAK,CAACwB,MAAM,CAAE,GAAEZ,MAAO,SAAQQ,EAAG,EAAC,CAAC;EAE5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}